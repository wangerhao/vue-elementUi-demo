<el-form :model="user" status-icon :rules="rules" ref="user" label-width="100px" class="demo-ruleForm">
	<el-form-item label="用户名" prop="userName">
		<el-input v-model.number="user.userName"></el-input>
	</el-form-item>
	<el-form-item label="密码" prop="pass">
		<el-input type="password" v-model="user.pass" auto-complete="off"></el-input>
	</el-form-item>
	<el-form-item label="确认密码" prop="checkPass">
		<el-input type="password" v-model="user.checkPass" auto-complete="off"></el-input>
	</el-form-item>
	<el-form-item>
		<el-button type="primary" @click="submitForm('user')">提交</el-button>
		<el-button @click="resetForm('user')">重置</el-button>
	</el-form-item>
</el-form>
<script>
	export default {
		data() {
			var checkUserName = (rule, value, callback) => {
				if(!value) {
					return callback(new Error('用户名不能为空'));
				}
			};
			var validatePass = (rule, value, callback) => {
				if(value === '') {
					callback(new Error('请输入密码'));
				} else {
					if(this.user.checkPass !== '') {
						this.$refs.user.validateField('checkPass');
					}
					callback();
				}
			};
			var validatePass2 = (rule, value, callback) => {
				if(value === '') {
					callback(new Error('请再次输入密码'));
				} else if(value !== this.user.pass) {
					callback(new Error('两次输入密码不一致!'));
				} else {
					callback();
				}
			};
			return {
				user: {
					pass: '',
					checkPass: '',
					userName: ''
				},
				rules: {
					pass: [{
						validator: validatePass,
						trigger: 'blur'
					}],
					checkPass: [{
						validator: validatePass2,
						trigger: 'blur'
					}],
					userName: [{
						validator: checkUserName,
						trigger: 'blur'
					}]
				}
			};
		},
		methods: {
			submitForm(formName) {
				this.$refs[formName].validate((valid) => {
					if(valid) {
						alert('submit!');
					} else {
						console.log('error submit!!');
						return false;
					}
				});
			},
			resetForm(formName) {
				this.$refs[formName].resetFields();
			}
		}
	}
</script>